Q: 从输入URL到页面显示发生了什么?
A: 在浏览器输入url后，浏览器主进程处理输入信息后开始导航，与网络进程通信，准备发起url请求，此时并不会直接发起请求，会首先查找本地缓存资源，如果有就返回资源给浏览器，没有的话就发起url请求。
   总体来说分为以下几个过程:
   DNS 解析:将域名解析成 IP 地址
   TCP 连接：TCP 三次握手
   发送 HTTP 请求
   服务器处理请求并返回 HTTP 报文
   浏览器解析渲染页面
   断开连接：TCP 四次挥手
   三次握手：
    客户端发送一个带 SYN=1，Seq=X 的数据包到服务器端口（第一次握手，由浏览器发起，告诉服务器我要发送请求了）
    服务器发回一个带 SYN=1， ACK=X+1， Seq=Y 的响应包以示传达确认信息（第二次握手，由服务器发起，告诉浏览器我准备接受了，你赶紧发送吧）
    客户端再回传一个带 ACK=Y+1， Seq=Z 的数据包，代表“握手结束”（第三次握手，由浏览器发送，告诉服务器，我马上就发了，准备接受吧）
  四次挥手：
  发起方向被动方发送报文，Fin、Ack、Seq，表示已经没有数据传输了。并进入 FIN_WAIT_1 状态。(第一次挥手：由浏览器发起的，发送给服务器，我请求报文发送完了，你准备关闭吧)
  被动方发送报文，Ack、Seq，表示同意关闭请求。此时主机发起方进入 FIN_WAIT_2 状态。(第二次挥手：由服务器发起的，告诉浏览器，我请求报文接受完了，我准备关闭了，你也准备吧)
  被动方向发起方发送报文段，Fin、Ack、Seq，请求关闭连接。并进入 LAST_ACK 状态。(第三次挥手：由服务器发起，告诉浏览器，我响应报文发送完了，你准备关闭吧)
  发起方向被动方发送报文段，Ack、Seq。然后进入等待 TIME_WAIT 状态。被动方收到发起方的报文段以后关闭连接。发起方等待一定时间未收到回复，则正常关闭。(第四次挥手：由浏览器发起，告诉服务器，我响应报文接受完了，我准备关闭了，你也准备吧)
route和router 权限控制 push时候path和params不能一起用 要用name和params

插入排序 快速排序

虚拟滚动

事件委托

继承

promise

vue全局配置

递归 回溯

nextTick
nextTick是等待下一dom更新完毕后执行的方法。

vuex

vue2 vue3 双向绑定

防抖 节流

proxy代理

轮播图
